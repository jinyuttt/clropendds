# -*-Makefile-*-
#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CC            = gcc
CXX           = g++
CXXFLAGS      = -std=c++17
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -D_REENTRANT -I"$(ACE_ROOT)" -I"$(TAO_ROOT)" -I"$(DDS_ROOT)"
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"." -L"$(ACE_ROOT)/lib" -L"$(DDS_ROOT)/lib"
CCC           = $(CXX)
MAKEFILE      = Makefile.DDS_OpenddsWrappers
DEPENDENCIES  = .depend.$(MAKEFILE)
LTARGETDIR    = ./
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -l"OpenDDS_Dcps$(LIBSUFFIX)" -l"TAO_BiDirGIOP$(LIBSUFFIX)" -l"TAO_PI$(LIBSUFFIX)" -l"TAO_CodecFactory$(LIBSUFFIX)" -l"TAO_Valuetype$(LIBSUFFIX)" -l"TAO_PortableServer$(LIBSUFFIX)" -l"TAO_AnyTypeCode$(LIBSUFFIX)" -l"TAO$(LIBSUFFIX)" -l"ACE$(LIBSUFFIX)" -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) -lpthread
OBJS          = DDSMessengerTypeSupportC$(OBJEXT) DDSMessengerTypeSupportS$(OBJEXT) DDSMessengerC$(OBJEXT) DDSMessengerS$(OBJEXT) DDSMessengerTypeSupportImpl$(OBJEXT) DataReaderListenerImpl$(OBJEXT) OpenddsExportForSo$(OBJEXT)
AREXT         = .a
LIB           = $(LTARGETDIR)$(LIBPREFIX)OpenddsForSo$(LIBSUFFIX)$(AREXT)
SOEXT         = .so
SHTARGETDIR   = ./
SHLIB         = $(SHTARGETDIR)$(LIBPREFIX)OpenddsForSo$(LIBSUFFIX)$(SOEXT)
SHFLAGS       = -shared
SRC           = DDSMessengerTypeSupportC.cpp DDSMessengerTypeSupportS.cpp DDSMessengerC.cpp DDSMessengerS.cpp DDSMessengerTypeSupportImpl.cpp DataReaderListenerImpl.cpp OpenddsExportForSo.cpp
LINK.cc       = $(LD) $(LDFLAGS)
DYNAMICFLAGS  = -DHELLOMSGCOMMON_BUILD_DLL
STATICFLAGS   = -DACE_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS
EXPORTFLAGS   = $(DYNAMICFLAGS)
DEPLIBS       = $(foreach lib, OpenDDS_Dcps$(LIBSUFFIX) TAO_BiDirGIOP$(LIBSUFFIX) TAO_PI$(LIBSUFFIX) TAO_CodecFactory$(LIBSUFFIX) TAO_Valuetype$(LIBSUFFIX) TAO_PortableServer$(LIBSUFFIX) TAO_AnyTypeCode$(LIBSUFFIX) TAO$(LIBSUFFIX) ACE$(LIBSUFFIX) , $(foreach libpath, . $(ACE_ROOT)/lib $(DDS_ROOT)/lib, $(wildcard $(libpath)/lib$(lib).a)))

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(SHLIB)

$(SHLIB): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(SHTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(SHTARGETDIR)"
	$(LINK.cc) $(SHFLAGS) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

$(LIB): $(OBJS)
	@$(TESTDIRSTART) "$(LTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(LTARGETDIR)"
	$(AR) $(ARFLAGS) $(LIB) $(OBJS)

SPACE           = $(should_be_unset) $(should_be_unset)
GENERATED_DIRTY = DDSMessengerC.cpp DDSMessengerS.cpp DDSMessengerC.inl DDSMessengerC.h DDSMessengerS.h DDSMessengerTypeSupportC.cpp DDSMessengerTypeSupportS.cpp DDSMessengerTypeSupportC.inl DDSMessengerTypeSupportC.h DDSMessengerTypeSupportS.h DDSMessengerTypeSupportImpl.cpp DDSMessengerTypeSupport.idl DDSMessengerTypeSupportImpl.h


.NOTPARALLEL:
DDSMessengerC.cpp DDSMessengerS.cpp DDSMessengerC.inl DDSMessengerC.h DDSMessengerS.h: DDSMessenger.idl $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/bin/tao_idl) $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/lib/$(LIBPREFIX)TAO_IDL_BE$(LIBSUFFIX)$(SOEXT)) $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/lib/$(LIBPREFIX)TAO_IDL_FE$(LIBSUFFIX)$(SOEXT))
	$(ACE_ROOT)/bin/tao_idl -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I $(TAO_ROOT) --idl-version 4 --unknown-annotations ignore -as -Sa -St -I$(DDS_ROOT) DDSMessenger.idl


.NOTPARALLEL:
DDSMessengerTypeSupportC.cpp DDSMessengerTypeSupportS.cpp DDSMessengerTypeSupportC.inl DDSMessengerTypeSupportC.h DDSMessengerTypeSupportS.h: DDSMessengerTypeSupport.idl $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/bin/tao_idl) $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/lib/$(LIBPREFIX)TAO_IDL_BE$(LIBSUFFIX)$(SOEXT)) $(subst $(SPACE),\$(SPACE),$(ACE_ROOT)/lib/$(LIBPREFIX)TAO_IDL_FE$(LIBSUFFIX)$(SOEXT))
	$(ACE_ROOT)/bin/tao_idl -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I $(TAO_ROOT) --idl-version 4 --unknown-annotations ignore -as -Sa -St -I$(DDS_ROOT) DDSMessengerTypeSupport.idl


.NOTPARALLEL:
DDSMessengerTypeSupportImpl.cpp DDSMessengerTypeSupport.idl DDSMessengerTypeSupportImpl.h: DDSMessenger.idl $(subst $(SPACE),\$(SPACE),$(DDS_ROOT)/bin/opendds_idl) $(subst $(SPACE),\$(SPACE),$(DDS_ROOT)/dds/idl/IDLTemplate.txt)
	$(DDS_ROOT)/bin/opendds_idl -Sa -St DDSMessenger.idl

.PRECIOUS: $(GENERATED_DIRTY)
$(OBJS): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-:

DDSMessengerTypeSupportC$(OBJEXT): DDSMessengerTypeSupportC.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DDSMessengerTypeSupportC.cpp

DDSMessengerTypeSupportS$(OBJEXT): DDSMessengerTypeSupportS.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DDSMessengerTypeSupportS.cpp

DDSMessengerC$(OBJEXT): DDSMessengerC.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DDSMessengerC.cpp

DDSMessengerS$(OBJEXT): DDSMessengerS.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DDSMessengerS.cpp

DDSMessengerTypeSupportImpl$(OBJEXT): DDSMessengerTypeSupportImpl.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DDSMessengerTypeSupportImpl.cpp

DataReaderListenerImpl$(OBJEXT): DataReaderListenerImpl.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DataReaderListenerImpl.cpp

OpenddsExportForSo$(OBJEXT): OpenddsExportForSo.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) OpenddsExportForSo.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(SHLIB) $(LIB)
	-$(RM) $(GENERATED_DIRTY)

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------


depend:
	-$(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)
