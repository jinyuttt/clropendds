// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:372


#include "DDSMessengerTypeSupportC.h"
#include "tao/CDR.h"
#include "cstring"

#if !defined (__ACE_INLINE__)
#include "DDSMessengerTypeSupportC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for DDSMessenger::MessageTypeSupport.

DDSMessenger::MessageTypeSupport_ptr
TAO::Objref_Traits<DDSMessenger::MessageTypeSupport>::duplicate (DDSMessenger::MessageTypeSupport_ptr p)
{
  return DDSMessenger::MessageTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDSMessenger::MessageTypeSupport>::release (DDSMessenger::MessageTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDSMessenger::MessageTypeSupport_ptr
TAO::Objref_Traits<DDSMessenger::MessageTypeSupport>::nil ()
{
  return DDSMessenger::MessageTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSMessenger::MessageTypeSupport>::marshal (const DDSMessenger::MessageTypeSupport_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



DDSMessenger::MessageTypeSupport::MessageTypeSupport ()
{}DDSMessenger::MessageTypeSupport_ptr
DDSMessenger::MessageTypeSupport::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageTypeSupport::_duplicate (
      dynamic_cast<MessageTypeSupport_ptr> (_tao_objref));
}

DDSMessenger::MessageTypeSupport_ptr
DDSMessenger::MessageTypeSupport::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageTypeSupport::_duplicate (
      dynamic_cast<MessageTypeSupport_ptr> (_tao_objref));
}

DDSMessenger::MessageTypeSupport_ptr
DDSMessenger::MessageTypeSupport::_nil ()
{
  return nullptr;
}

DDSMessenger::MessageTypeSupport_ptr
DDSMessenger::MessageTypeSupport::_duplicate (MessageTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSMessenger::MessageTypeSupport::_tao_release (MessageTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSMessenger::MessageTypeSupport::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:DDSMessenger/MessageTypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSMessenger::MessageTypeSupport::_interface_repository_id () const
{
  return "IDL:DDSMessenger/MessageTypeSupport:1.0";
}

::CORBA::Boolean
DDSMessenger::MessageTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for DDSMessenger::MessageDataWriter.

DDSMessenger::MessageDataWriter_ptr
TAO::Objref_Traits<DDSMessenger::MessageDataWriter>::duplicate (DDSMessenger::MessageDataWriter_ptr p)
{
  return DDSMessenger::MessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDSMessenger::MessageDataWriter>::release (DDSMessenger::MessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDSMessenger::MessageDataWriter_ptr
TAO::Objref_Traits<DDSMessenger::MessageDataWriter>::nil ()
{
  return DDSMessenger::MessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSMessenger::MessageDataWriter>::marshal (const DDSMessenger::MessageDataWriter_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



DDSMessenger::MessageDataWriter::MessageDataWriter ()
{}DDSMessenger::MessageDataWriter_ptr
DDSMessenger::MessageDataWriter::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataWriter::_duplicate (
      dynamic_cast<MessageDataWriter_ptr> (_tao_objref));
}

DDSMessenger::MessageDataWriter_ptr
DDSMessenger::MessageDataWriter::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataWriter::_duplicate (
      dynamic_cast<MessageDataWriter_ptr> (_tao_objref));
}

DDSMessenger::MessageDataWriter_ptr
DDSMessenger::MessageDataWriter::_nil ()
{
  return nullptr;
}

DDSMessenger::MessageDataWriter_ptr
DDSMessenger::MessageDataWriter::_duplicate (MessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSMessenger::MessageDataWriter::_tao_release (MessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSMessenger::MessageDataWriter::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:DDSMessenger/MessageDataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSMessenger::MessageDataWriter::_interface_repository_id () const
{
  return "IDL:DDSMessenger/MessageDataWriter:1.0";
}

::CORBA::Boolean
DDSMessenger::MessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for DDSMessenger::MessageDataReader.

DDSMessenger::MessageDataReader_ptr
TAO::Objref_Traits<DDSMessenger::MessageDataReader>::duplicate (DDSMessenger::MessageDataReader_ptr p)
{
  return DDSMessenger::MessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDSMessenger::MessageDataReader>::release (DDSMessenger::MessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDSMessenger::MessageDataReader_ptr
TAO::Objref_Traits<DDSMessenger::MessageDataReader>::nil ()
{
  return DDSMessenger::MessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSMessenger::MessageDataReader>::marshal (const DDSMessenger::MessageDataReader_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



DDSMessenger::MessageDataReader::MessageDataReader ()
{}DDSMessenger::MessageDataReader_ptr
DDSMessenger::MessageDataReader::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReader::_duplicate (
      dynamic_cast<MessageDataReader_ptr> (_tao_objref));
}

DDSMessenger::MessageDataReader_ptr
DDSMessenger::MessageDataReader::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReader::_duplicate (
      dynamic_cast<MessageDataReader_ptr> (_tao_objref));
}

DDSMessenger::MessageDataReader_ptr
DDSMessenger::MessageDataReader::_nil ()
{
  return nullptr;
}

DDSMessenger::MessageDataReader_ptr
DDSMessenger::MessageDataReader::_duplicate (MessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSMessenger::MessageDataReader::_tao_release (MessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSMessenger::MessageDataReader::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/DataReaderEx:1.0") == 0 ||
      std::strcmp (value, "IDL:DDSMessenger/MessageDataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSMessenger::MessageDataReader::_interface_repository_id () const
{
  return "IDL:DDSMessenger/MessageDataReader:1.0";
}

::CORBA::Boolean
DDSMessenger::MessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for DDSMessenger::HeartbeatTypeSupport.

DDSMessenger::HeartbeatTypeSupport_ptr
TAO::Objref_Traits<DDSMessenger::HeartbeatTypeSupport>::duplicate (DDSMessenger::HeartbeatTypeSupport_ptr p)
{
  return DDSMessenger::HeartbeatTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDSMessenger::HeartbeatTypeSupport>::release (DDSMessenger::HeartbeatTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDSMessenger::HeartbeatTypeSupport_ptr
TAO::Objref_Traits<DDSMessenger::HeartbeatTypeSupport>::nil ()
{
  return DDSMessenger::HeartbeatTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSMessenger::HeartbeatTypeSupport>::marshal (const DDSMessenger::HeartbeatTypeSupport_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



DDSMessenger::HeartbeatTypeSupport::HeartbeatTypeSupport ()
{}DDSMessenger::HeartbeatTypeSupport_ptr
DDSMessenger::HeartbeatTypeSupport::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return HeartbeatTypeSupport::_duplicate (
      dynamic_cast<HeartbeatTypeSupport_ptr> (_tao_objref));
}

DDSMessenger::HeartbeatTypeSupport_ptr
DDSMessenger::HeartbeatTypeSupport::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return HeartbeatTypeSupport::_duplicate (
      dynamic_cast<HeartbeatTypeSupport_ptr> (_tao_objref));
}

DDSMessenger::HeartbeatTypeSupport_ptr
DDSMessenger::HeartbeatTypeSupport::_nil ()
{
  return nullptr;
}

DDSMessenger::HeartbeatTypeSupport_ptr
DDSMessenger::HeartbeatTypeSupport::_duplicate (HeartbeatTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSMessenger::HeartbeatTypeSupport::_tao_release (HeartbeatTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSMessenger::HeartbeatTypeSupport::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:DDSMessenger/HeartbeatTypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSMessenger::HeartbeatTypeSupport::_interface_repository_id () const
{
  return "IDL:DDSMessenger/HeartbeatTypeSupport:1.0";
}

::CORBA::Boolean
DDSMessenger::HeartbeatTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for DDSMessenger::HeartbeatDataWriter.

DDSMessenger::HeartbeatDataWriter_ptr
TAO::Objref_Traits<DDSMessenger::HeartbeatDataWriter>::duplicate (DDSMessenger::HeartbeatDataWriter_ptr p)
{
  return DDSMessenger::HeartbeatDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDSMessenger::HeartbeatDataWriter>::release (DDSMessenger::HeartbeatDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDSMessenger::HeartbeatDataWriter_ptr
TAO::Objref_Traits<DDSMessenger::HeartbeatDataWriter>::nil ()
{
  return DDSMessenger::HeartbeatDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSMessenger::HeartbeatDataWriter>::marshal (const DDSMessenger::HeartbeatDataWriter_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



DDSMessenger::HeartbeatDataWriter::HeartbeatDataWriter ()
{}DDSMessenger::HeartbeatDataWriter_ptr
DDSMessenger::HeartbeatDataWriter::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return HeartbeatDataWriter::_duplicate (
      dynamic_cast<HeartbeatDataWriter_ptr> (_tao_objref));
}

DDSMessenger::HeartbeatDataWriter_ptr
DDSMessenger::HeartbeatDataWriter::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return HeartbeatDataWriter::_duplicate (
      dynamic_cast<HeartbeatDataWriter_ptr> (_tao_objref));
}

DDSMessenger::HeartbeatDataWriter_ptr
DDSMessenger::HeartbeatDataWriter::_nil ()
{
  return nullptr;
}

DDSMessenger::HeartbeatDataWriter_ptr
DDSMessenger::HeartbeatDataWriter::_duplicate (HeartbeatDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSMessenger::HeartbeatDataWriter::_tao_release (HeartbeatDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSMessenger::HeartbeatDataWriter::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:DDSMessenger/HeartbeatDataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSMessenger::HeartbeatDataWriter::_interface_repository_id () const
{
  return "IDL:DDSMessenger/HeartbeatDataWriter:1.0";
}

::CORBA::Boolean
DDSMessenger::HeartbeatDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// E:\OpenDDS-3.31.0\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for DDSMessenger::HeartbeatDataReader.

DDSMessenger::HeartbeatDataReader_ptr
TAO::Objref_Traits<DDSMessenger::HeartbeatDataReader>::duplicate (DDSMessenger::HeartbeatDataReader_ptr p)
{
  return DDSMessenger::HeartbeatDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDSMessenger::HeartbeatDataReader>::release (DDSMessenger::HeartbeatDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDSMessenger::HeartbeatDataReader_ptr
TAO::Objref_Traits<DDSMessenger::HeartbeatDataReader>::nil ()
{
  return DDSMessenger::HeartbeatDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSMessenger::HeartbeatDataReader>::marshal (const DDSMessenger::HeartbeatDataReader_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



DDSMessenger::HeartbeatDataReader::HeartbeatDataReader ()
{}DDSMessenger::HeartbeatDataReader_ptr
DDSMessenger::HeartbeatDataReader::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return HeartbeatDataReader::_duplicate (
      dynamic_cast<HeartbeatDataReader_ptr> (_tao_objref));
}

DDSMessenger::HeartbeatDataReader_ptr
DDSMessenger::HeartbeatDataReader::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return HeartbeatDataReader::_duplicate (
      dynamic_cast<HeartbeatDataReader_ptr> (_tao_objref));
}

DDSMessenger::HeartbeatDataReader_ptr
DDSMessenger::HeartbeatDataReader::_nil ()
{
  return nullptr;
}

DDSMessenger::HeartbeatDataReader_ptr
DDSMessenger::HeartbeatDataReader::_duplicate (HeartbeatDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSMessenger::HeartbeatDataReader::_tao_release (HeartbeatDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSMessenger::HeartbeatDataReader::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/DataReaderEx:1.0") == 0 ||
      std::strcmp (value, "IDL:DDSMessenger/HeartbeatDataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSMessenger::HeartbeatDataReader::_interface_repository_id () const
{
  return "IDL:DDSMessenger/HeartbeatDataReader:1.0";
}

::CORBA::Boolean
DDSMessenger::HeartbeatDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

